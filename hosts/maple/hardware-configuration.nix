# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = ["amdgpu"];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];
  boot.kernelPackages = pkgs.linuxKernel.packages.linux_6_5;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/100d1a3e-4f34-48c6-b25b-a93f64efdcc3";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-a97dfd88-bcf9-406d-a8c3-bd2ac63c1496".device = "/dev/disk/by-uuid/a97dfd88-bcf9-406d-a8c3-bd2ac63c1496";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F0C4-DABA";
    fsType = "vfat";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/98d6c398-60f8-476f-becf-6044e2c654d6";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
